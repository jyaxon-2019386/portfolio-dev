---
import GitHub from "../components/Icons/Github.astro";
import NextJS from "../components/Icons/NextJS.astro";
import Tailwind from "../components/Icons/Tailwind.astro";
import React from "../components/Icons/React.astro";
import Mongo from "../components/Icons/Mongo.astro";
import LinkButton from "./LinkButton.astro";
import JavaScript from '../components/Icons/JavaScript.astro';
import Node from '../components/Icons/Node.astro'
import Socket from '../components/Icons/Socket.astro'
import SceneBuilder from '../components/Icons/SceneBuillder.astro'
import Java from '../components/Icons/Java.astro'
import MySQL from '../components/Icons/MySQL.astro'
import Netbeans from "./Icons/Netbeans.astro";
import Css from './Icons/Css.astro'

const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJS,
  },
  JAVA: {
    name: "Java",
    class: "bg-[#333333] text-white",
    icon: Java,
  },
  CSS: {
    name: "CSS",
    class: "bg-[#333333] text-white",
    icon: Css,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  REACT: {
    name: "React.js",
    class: "bg-[#23272f] text-white",
    icon: React,
  },
  MYSQL: {
    name: "MySQL",
    class: "bg-[#02729D] text-white",
    icon: MySQL,
  },
  MONGODB: {
    name: "Mongodb",
    class: "bg-[#70925D] text-white",
    icon: Mongo,
  },
  NETBEANS: {
    name: "Neatbeans",
    class: "bg-black text-white",
    icon: Netbeans,
  },
  EXPRESS: {
    name: "Express.js",
    class: "bg-[#23272f] text-white",
    icon: React,
  },
  SOCKET: {
    name: "Socket.io",
    class: "bg-[#23272f] text-white",
    icon: Socket,
  },
  JAVASCRIPT: {
    name: "JavaScript",
    class: "bg-[#373631] text-white",
    icon: JavaScript,
  },
  NODEJS: {
    name: "Node.js",
    class: "bg-[#303030] text-white",
    icon: Node,
  },
  SCENEBUILDER: {
    name: "Scene Builder",
    class: "bg-[#042745] text-white",
    icon: SceneBuilder,
  },
};

const PROJECTS = [
  {
    title: "Sistema de Restaurantes Tony's Kinal",
    description:
      "Sistema de Restaurantes Tony's Kinal, una aplicación integral para la gestión de restaurantes. Desarollada en Java y gestionada con el Sistema de Bases de Datos MySQL.",
    github: "https://github.com/jyaxon-2019386/projects-portfolio/tree/tonys-kinal",
    image: "/projects/tonys.webp",
    tags: [TAGS.SCENEBUILDER, TAGS.MYSQL, TAGS.JAVA, TAGS.NETBEANS],
  },
  {
    title: "Sistema Bancario Personalizado",
    description:
      "Sistema Bancario con MERN stack, que incluye funcionalidades como la creación y gestión de cuentas de usuario, transferencias de fondos, historial de transacciones y autenticación segura.",
    github: "https://github.com/jyaxon-2019386/projects-portfolio/tree/sistema-bancario",
    image: "/projects/bank.webp",
    tags: [ TAGS.TAILWIND, TAGS.REACT, TAGS.JAVASCRIPT, TAGS.NODEJS,TAGS.MONGODB],
  },
  {
    title: "Gestor de Almacenes",
    description:
      "Sistema para gestionar las actividades dentro de una almacenadora hecha con MERN stack.",
    github: "https://github.com/jyaxon-2019386/projects-portfolio/tree/sistema-almacenadora",
    image: "/projects/todolist.webp",
    tags: [TAGS.MONGODB, TAGS.CSS, TAGS.REACT, TAGS.JAVASCRIPT, TAGS.NODEJS],
  },
  {
    title: "Sistema CHAT",
    description:
      "Proyecto sobre un chat en tiempo real para la plataforma NOVA. Sistema desarrollado en MERN stack y Socket.io. ",
    github: "https://github.com/jyaxon-2019386/projects-portfolio/tree/chat-nova",
    image: "/projects/chat.webp",
    tags: [ TAGS.TAILWIND, TAGS.REACT, TAGS.JAVASCRIPT, TAGS.NODEJS,TAGS.MONGODB, TAGS.SOCKET],
  },
];
---

<style>
  .tag {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.25rem 0.5rem;
    border-radius: 9999px;
    font-size: 0.875rem;
    font-weight: 500;
  }
  .tag-icon {
    width: 1rem;
    height: 1rem;
  }
</style>

<div class="flex flex-col gap-y-16">
  {PROJECTS.map(({ image, title, description, tags, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
      <div class="w-full md:w-1/2">
        <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
          <img
            alt={title}
            class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
            loading="lazy"
            src={image}
          />
        </div>
      </div>

      <div class="w-full md:w-1/2 md:max-w-lg">
        <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
          {title}
        </h3>
        <div class="flex flex-wrap mt-2 gap-2">
          {tags.map((tag) => (
            <span class={`tag ${tag.class}`}>
              <tag.icon class="tag-icon" />
              {tag.name}
            </span>
          ))}
        </div>

        <div class="mt-2 text-gray-700 dark:text-gray-400">
          {description}
        </div>
        <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Code
            </LinkButton>
          )}
        </footer>
      </div>
    </article>
  ))}
</div>
